{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WeatherDisplay.js\";\nimport React, { Component } from 'react';\nexport default class WeatherDisplay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weatherData: null\n    };\n  }\n\n  componentDidMount() {\n    const name = this.props.name;\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + name + \"&lang=ru&units=metric&appid=b1b35bba8b434a28a0be2a3e1071ae5b\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Loading\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, weather.main, \" in \", weatherData.name, React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Current: \", weatherData.main.temp, \"\\xB0\\u0421\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"High: \", weatherData.main.temp_max, \"\\xB0\\u0421\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Low: \", weatherData.main.temp_min, \"\\xB0\\u0421\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Wind Speed: \", weatherData.wind.speed, \" \\u043C/\\u0441\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WeatherDisplay.js"],"names":["React","Component","WeatherDisplay","state","weatherData","componentDidMount","name","props","URL","fetch","then","res","json","setState","render","weather","iconUrl","icon","main","description","temp","temp_max","temp_min","wind","speed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDE,KADoD,GAC5C;AACNC,MAAAA,WAAW,EAAE;AADP,KAD4C;AAAA;;AAKpDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAME,GAAG,GAAG,uDACVF,IADU,GAEV,8DAFF;AAGAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;AAC9C,WAAKC,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACD,KAFD;AAGD;;AAGDE,EAAAA,MAAM,GAAG;AACP,UAAMV,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,QAAI,CAACA,WAAL,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAClB,UAAMW,OAAO,GAAGX,WAAW,CAACW,OAAZ,CAAoB,CAApB,CAAhB;AACA,UAAMC,OAAO,GAAG,qCAAqCD,OAAO,CAACE,IAA7C,GAAoD,MAApE;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,IADX,UACqBd,WAAW,CAACE,IADjC,EAEE;AAAK,MAAA,GAAG,EAAEU,OAAV;AAAmB,MAAA,GAAG,EAAEZ,WAAW,CAACe,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaf,WAAW,CAACc,IAAZ,CAAiBE,IAA9B,eALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUhB,WAAW,CAACc,IAAZ,CAAiBG,QAA3B,eANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASjB,WAAW,CAACc,IAAZ,CAAiBI,QAA1B,eAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBlB,WAAW,CAACmB,IAAZ,CAAiBC,KAAjC,mBARF,CADF;AAYD;;AAjCmD","sourcesContent":["import React, {Component} from 'react';\n\nexport default class WeatherDisplay extends Component {\n  state = {\n    weatherData: null\n  };\n\n  componentDidMount() {\n    const name = this.props.name;\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      name +\n      \"&lang=ru&units=metric&appid=b1b35bba8b434a28a0be2a3e1071ae5b\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return (\n      <div>\n        <h1>\n          {weather.main} in {weatherData.name}\n          <img src={iconUrl} alt={weatherData.description} />\n        </h1>\n        <p>Current: {weatherData.main.temp}°С</p>\n        <p>High: {weatherData.main.temp_max}°С</p>\n        <p>Low: {weatherData.main.temp_min}°С</p>\n        <p>Wind Speed: {weatherData.wind.speed} м/с</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}