{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport WeatherCard from './WeatherCard';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nexport default function Weather({\n  add\n}) {\n  const [buffer, setBuffer] = useState(null);\n  const [code, setCode] = useState(null);\n  useEffect(() => {// checkInput();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"search-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"text-field\",\n    id: \"outlined-basic\",\n    label: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0433\\u043E\\u0440\\u043E\\u0434\\u0443\",\n    variant: \"filled\",\n    onChange: e => setBuffer(e.target.value),\n    onKeyPress: e => {\n      if (e.key === \"Enter\") {\n        setBuffer(e.target.value);\n        add(buffer);\n        setBuffer(null);\n        e.target.value = \"\";\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => {\n      async function checkInput() {\n        const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + buffer + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n        const responce = await fetch(url);\n        const data = await responce.json(); // code = data.cod === 200 ? true : false;\n\n        setCode(data.cod);\n        console.log(\"checlkInput \" + code);\n      }\n\n      console.log(\"onClick \" + code); // add(buffer);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"))));\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/Search.js"],"names":["React","useState","useEffect","WeatherCard","TextField","Box","Button","Card","CardContent","CardActions","Weather","add","buffer","setBuffer","code","setCode","e","target","value","key","checkInput","url","responce","fetch","data","json","cod","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAwB;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,KAAK,EAAC,kFAHR;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,QAAQ,EAAGc,CAAD,IAAOH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAME,IAAA,UAAU,EAAGF,CAAD,IAAO;AACjB,UAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AACrBN,QAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAP,QAAAA,GAAG,CAACC,MAAD,CAAH;AACAC,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAG,QAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAe,EAAf;AACD;AACF,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAkBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,qBAAeE,UAAf,GAA4B;AAC1B,cAAMC,GAAG,GAAG,uDACZT,MADY,GACH,8DADT;AAEA,cAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,cAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAJ0B,CAK1B;;AACAV,QAAAA,OAAO,CAACS,IAAI,CAACE,GAAN,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBd,IAA7B;AAED;;AAEDa,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAad,IAAzB,EAZa,CAab;AACD,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,CAlBF,CADA,CADF;AA8CD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WeatherCard from './WeatherCard';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nexport default function Weather({add}) {\n  const [buffer, setBuffer] = useState(null);\n  const [code, setCode] = useState(null);\n\n  useEffect(() => {\n    // checkInput();\n  }, []);\n\n  return(\n    <div>\n    <Card className=\"search-card\">\n      <CardContent>\n        <TextField\n          className=\"text-field\"\n          id=\"outlined-basic\"\n          label=\"Поиск по городу\"\n          variant=\"filled\"\n          onChange={(e) => setBuffer(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              setBuffer(e.target.value);\n              add(buffer);\n              setBuffer(null);\n              e.target.value=\"\";\n            }\n          }}\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          onClick={() => {\n            async function checkInput() {\n              const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n              buffer + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n              const responce = await fetch(url);\n              const data = await responce.json();\n              // code = data.cod === 200 ? true : false;\n              setCode(data.cod);\n              console.log(\"checlkInput \" + code);\n\n            }\n\n            console.log(\"onClick \" + code);\n            // add(buffer);\n          }}\n        >Добавить\n        </Button>\n      </CardActions>\n    </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}