{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WeatherDisplay.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nconst useStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\nexport default class WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2';\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + name + \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435, \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u043F\\u043E\\u0433\\u043E\\u0434\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, weatherData.name), React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, weather.main), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, weatherData.main.temp, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"min: \", weatherData.main.temp_min, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"max: \", weatherData.main.temp_max, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"wind: \", weatherData.wind.speed, \" \\u043C/\\u0441\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(UpdateIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F: \", this.state.updateTime.toLocaleTimeString()), React.createElement(Card, {\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, weatherData.name), React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, weatherData.main.temp, \" \\xB0\\u0421\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, weather.main), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F: \", this.state.updateTime.toLocaleTimeString())), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WeatherDisplay.js"],"names":["React","Component","Button","UpdateIcon","Card","CardActions","CardContent","Typography","IconButton","ExpandMoreIcon","Collapse","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","WeatherDisplay","constructor","state","weatherData","updateTime","getWeather","bind","componentDidMount","name","props","apiKey","URL","fetch","then","res","json","setState","Date","render","weather","iconUrl","icon","description","main","temp","temp_min","temp_max","wind","speed","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nexport default class WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null,\n    };\n    this.getWeather = this.getWeather.bind(this);\n    };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2'\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      name +\n      \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData)\n    return (<div>Подождите, данные о погоде загружаются</div>);\n\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>{weatherData.name}</h1>\n        <img src={iconUrl} alt={weatherData.description} />\n        <h1>{weather.main}</h1>\n        <h1>{weatherData.main.temp} °С</h1>\n        <h2>min: {weatherData.main.temp_min} °С</h2>\n        <h2>max: {weatherData.main.temp_max} °С</h2>\n        <h2>wind: {weatherData.wind.speed} м/с</h2>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          startIcon={<UpdateIcon />}\n          onClick={this.getWeather}\n          >Обновить\n        </Button>\n        <p>Время последнего обновления: {this.state.updateTime.toLocaleTimeString()}</p>\n\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h6\">\n          {weatherData.name}\n        </Typography>\n        <img src={iconUrl} alt={weatherData.description} />\n        <Typography variant=\"h2\">\n          {weatherData.main.temp} °С\n        </Typography>\n        <Typography>\n          {weather.main}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          Время последнего обновления: {this.state.updateTime.toLocaleTimeString()}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <IconButton\n          aria-label=\"Развернуть\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}