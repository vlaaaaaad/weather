{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WeatherCard.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DrawCard from './DrawCard';\nexport default class WeatherCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2';\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + name + \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435, \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u043F\\u043E\\u0433\\u043E\\u0434\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F...\");\n\n    if (typeof weatherData.weather[0] !== \"undefined\" && weatherData.weather[0] !== null) {\n      const weather = weatherData.weather[0];\n      const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(DrawCard, {\n        name: weatherData.name,\n        iconUrl: iconUrl,\n        description: weatherData.description,\n        temp: weatherData.main.temp,\n        main: weather.main,\n        time: this.state.updateTime.toLocaleTimeString(),\n        min: weatherData.main.temp_min,\n        max: weatherData.main.temp_max,\n        wind: weatherData.wind.speed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WeatherCard.js"],"names":["React","Component","Button","UpdateIcon","Card","CardActions","CardContent","Typography","IconButton","ExpandMoreIcon","DrawCard","WeatherCard","constructor","state","weatherData","updateTime","getWeather","bind","componentDidMount","name","props","apiKey","URL","fetch","then","res","json","setState","Date","render","weather","iconUrl","icon","description","main","temp","toLocaleTimeString","temp_min","temp_max","wind","speed"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AACjDW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,IADF;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACC;;AAEHC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAMG,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AACA,UAAME,MAAM,GAAG,kCAAf;AACA,UAAMC,GAAG,GAAG,uDACVH,IADU,GAEV,8BAFU,GAEuBE,MAFnC;AAGAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCF,IAAnC,CAAwCE,IAAI,IAAI;AAC9C,WAAKC,QAAL,CAAc;AAAEb,QAAAA,WAAW,EAAEY;AAAf,OAAd;AACD,KAFD;AAGA,SAAKb,KAAL,CAAWE,UAAX,GAAwB,IAAIa,IAAJ,EAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMf,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AAEA,QAAI,CAACA,WAAL,EACA,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wNAAR;;AAEA,QAAI,OAAOA,WAAW,CAACgB,OAAZ,CAAoB,CAApB,CAAP,KAAkC,WAAlC,IAAiDhB,WAAW,CAACgB,OAAZ,CAAoB,CAApB,MAA2B,IAAhF,EACA;AACE,YAAMA,OAAO,GAAGhB,WAAW,CAACgB,OAAZ,CAAoB,CAApB,CAAhB;AACA,YAAMC,OAAO,GAAG,qCAAqCD,OAAO,CAACE,IAA7C,GAAoD,MAApE;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AACE,QAAA,IAAI,EAAElB,WAAW,CAACK,IADpB;AAEE,QAAA,OAAO,EAAEY,OAFX;AAGE,QAAA,WAAW,EAAEjB,WAAW,CAACmB,WAH3B;AAIE,QAAA,IAAI,EAAEnB,WAAW,CAACoB,IAAZ,CAAiBC,IAJzB;AAKE,QAAA,IAAI,EAAEL,OAAO,CAACI,IALhB;AAME,QAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWE,UAAX,CAAsBqB,kBAAtB,EANR;AAOE,QAAA,GAAG,EAAEtB,WAAW,CAACoB,IAAZ,CAAiBG,QAPxB;AAQE,QAAA,GAAG,EAAEvB,WAAW,CAACoB,IAAZ,CAAiBI,QARxB;AASE,QAAA,IAAI,EAAExB,WAAW,CAACyB,IAAZ,CAAiBC,KATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAeD;AAGF;;AAvDgD","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport DrawCard from './DrawCard'\n\nexport default class WeatherCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null,\n    };\n    this.getWeather = this.getWeather.bind(this);\n    };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2'\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      name +\n      \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData)\n    return (<div>Подождите, данные о погоде загружаются...</div>);\n\n    if (typeof weatherData.weather[0] !== \"undefined\" && weatherData.weather[0] !== null)\n    {\n      const weather = weatherData.weather[0];\n      const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n      return (\n        <div>\n        <DrawCard\n          name={weatherData.name}\n          iconUrl={iconUrl}\n          description={weatherData.description}\n          temp={weatherData.main.temp}\n          main={weather.main}\n          time={this.state.updateTime.toLocaleTimeString()}\n          min={weatherData.main.temp_min}\n          max={weatherData.main.temp_max}\n          wind={weatherData.wind.speed}\n        />\n        </div>\n      );\n    }\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}