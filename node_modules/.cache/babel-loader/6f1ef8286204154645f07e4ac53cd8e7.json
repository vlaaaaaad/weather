{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/Weather.js\";\nimport React, { useState, useEffect } from 'react';\nimport WeatherCard from './WeatherCard';\nimport Search from './Search';\nexport default function Weather() {\n  const [cities, setCities] = useState([\"Киев\", \"Харьков\"]);\n  const [buffer, setBuffer] = useState(\"\");\n  useEffect(() => {\n    const keys = Object.keys(localStorage);\n    console.log(keys);\n    keys.map(key => setCities(cities => [...cities, localStorage.getItem(key)]));\n  }, []);\n\n  const remove = city => {\n    const index = cities.indexOf(city);\n\n    if (index > -1) {\n      cities.splice(index, 1);\n    }\n\n    setCities(cities => [...cities]);\n    localStorage.removeItem(JSON.stringify(city));\n  };\n\n  const add = city => {\n    setCities(cities => [...cities, city]);\n    localStorage.setItem(JSON.stringify(city), city);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"d\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, cities.map(city => React.createElement(WeatherCard, {\n    key: JSON.stringify(city),\n    city: city,\n    remove: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Search, {\n    add: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/Weather.js"],"names":["React","useState","useEffect","WeatherCard","Search","Weather","cities","setCities","buffer","setBuffer","keys","Object","localStorage","console","log","map","key","getItem","remove","city","index","indexOf","splice","removeItem","JSON","stringify","add","setItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAC,MAAD,EAAS,SAAT,CAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYE,YAAZ,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,IAAAA,IAAI,CAACK,GAAL,CAASC,GAAG,IACRT,SAAS,CAACD,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAYM,YAAY,CAACK,OAAb,CAAqBD,GAArB,CAAZ,CAAX,CADb;AAID,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAMC,KAAK,GAAGd,MAAM,CAACe,OAAP,CAAeF,IAAf,CAAd;;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdd,MAAAA,MAAM,CAACgB,MAAP,CAAcF,KAAd,EAAqB,CAArB;AACD;;AACDb,IAAAA,SAAS,CAACD,MAAM,IAAI,CAAC,GAAGA,MAAJ,CAAX,CAAT;AACAM,IAAAA,YAAY,CAACW,UAAb,CAAwBC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAxB;AACD,GAPD;;AASA,QAAMO,GAAG,GAAIP,IAAD,IAAU;AAClBZ,IAAAA,SAAS,CAACD,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAYa,IAAZ,CAAX,CAAT;AACAP,IAAAA,YAAY,CAACe,OAAb,CAAqBH,IAAI,CAACC,SAAL,CAAeN,IAAf,CAArB,EAA2CA,IAA3C;AACH,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACS,GAAP,CAAWI,IAAI,IACd,oBAAC,WAAD;AACE,IAAA,GAAG,EAAIK,IAAI,CAACC,SAAL,CAAeN,IAAf,CADT;AAEE,IAAA,IAAI,EAAIA,IAFV;AAGE,IAAA,MAAM,EAAID,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EASE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAIQ,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WeatherCard from './WeatherCard';\nimport Search from './Search';\n\nexport default function Weather() {\n  const [cities, setCities] = useState([\"Киев\", \"Харьков\"]);\n  const [buffer, setBuffer] = useState(\"\");\n\n  useEffect(() => {\n    const keys = Object.keys(localStorage);\n    console.log(keys);\n    keys.map(key => (\n        setCities(cities => [...cities, localStorage.getItem(key)])\n      )\n    )\n  }, []);\n\n  const remove = (city) => {\n    const index = cities.indexOf(city);\n    if (index > -1) {\n      cities.splice(index, 1);\n    }\n    setCities(cities => [...cities]);\n    localStorage.removeItem(JSON.stringify(city));\n  }\n\n  const add = (city) => {\n      setCities(cities => [...cities, city]);\n      localStorage.setItem(JSON.stringify(city), city);\n  }\n\n  return(\n    <div className=\"d\">\n      {cities.map(city => (\n        <WeatherCard\n          key = {JSON.stringify(city)}\n          city = {city}\n          remove = {remove}>\n          </WeatherCard>\n        )\n      )}\n      <Search add = {add}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}