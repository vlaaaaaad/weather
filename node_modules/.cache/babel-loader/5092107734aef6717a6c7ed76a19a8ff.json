{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/Weather.js\";\nimport React, { useState } from 'react';\nimport WeatherCard from './WeatherCard';\nimport Box from '@material-ui/core/Box';\nexport default function Weather() {\n  const [cities, setCities] = useState([\"Харьков\", \"Киев\", \"Одесса\", \"Львов\"]);\n  const [buffer, setBuffer] = useState(\"\");\n\n  const remove = city => {\n    const index = cities.indexOf(city);\n\n    if (index > -1) {\n      cities.splice(index, 1);\n    }\n\n    setCities(cities => [...cities]);\n  };\n\n  const add = city => {\n    if (!cities.indexOf(city)) {\n      setCities(cities => [...cities, city]);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, cities.map(city => React.createElement(WeatherCard, {\n    key: JSON.stringify(city),\n    city: city,\n    remove: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Card, {\n    className: \"search-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"text-field\",\n    id: \"outlined-basic\",\n    label: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0433\\u043E\\u0440\\u043E\\u0434\\u0443\",\n    variant: \"filled\",\n    width: \"500px\",\n    onChange: e => this.setState({\n      buffer: e.target.value\n    }),\n    onKeyPress: e => {\n      if (e.key === \"Enter\") {\n        list.push(this.state.buffer);\n        this.setState({\n          cities: list\n        });\n        this.setState({\n          buffer: null\n        });\n        e.target.value = \"\";\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    startIcon: React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    onClick: () => {\n      list.push(this.state.buffer);\n      this.setState({\n        cities: list\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"))), \"\\xA0\");\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/Weather.js"],"names":["React","useState","WeatherCard","Box","Weather","cities","setCities","buffer","setBuffer","remove","city","index","indexOf","splice","add","map","JSON","stringify","e","setState","target","value","key","list","push","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport WeatherCard from './WeatherCard';\nimport Box from '@material-ui/core/Box';\n\nexport default function Weather() {\n  const [cities, setCities] = useState([\"Харьков\", \"Киев\", \"Одесса\", \"Львов\"]);\n  const [buffer, setBuffer] = useState(\"\");\n\n  const remove = (city) => {\n    const index = cities.indexOf(city);\n    if (index > -1) {\n      cities.splice(index, 1);\n    }\n    setCities(cities => [...cities]);\n  }\n\n  const add = (city) => {\n    if(!cities.indexOf(city)) {\n      setCities(cities => [...cities, city]);\n    }\n  }\n\n  return(\n    <div>\n    <Box display=\"flex\" flexWrap=\"wrap\">\n      {cities.map(city => (\n        <WeatherCard\n          key = {JSON.stringify(city)}\n          city = {city}\n          remove = {remove}>\n          </WeatherCard>\n        )\n      )}\n    </Box>\n    <Card className=\"search-card\">\n      <CardContent>\n      <TextField\n        className=\"text-field\"\n        id=\"outlined-basic\"\n        label=\"Поиск по городу\"\n        variant=\"filled\"\n        width=\"500px\"\n        onChange={(e) => this.setState({buffer: e.target.value})}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            list.push(this.state.buffer);\n            this.setState({cities: list});\n            this.setState({buffer: null});\n            e.target.value=\"\";\n          }\n        }}\n        />\n        </CardContent>\n        <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            list.push(this.state.buffer);\n            this.setState({cities: list});\n          }}\n          >Добавить\n        </Button>\n        </CardActions>\n    </Card>\n     </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}