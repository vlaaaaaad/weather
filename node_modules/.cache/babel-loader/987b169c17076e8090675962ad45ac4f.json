{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NavLink } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\nexport default function WCard(props) {\n  const [weatherData, setWeatherData] = useState(0);\n  const [updateTime, setUpdateTime] = useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n  useEffect(() => {\n    async function fetchWeather() {\n      const city = \"Харьков\";\n      const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n      const responce = await fetch(url);\n      const data = await responce.json();\n      setWeatherData(data);\n    }\n\n    fetchWeather();\n    setUpdateTime(new Date().toLocaleTimeString());\n  }, []); // const fetchWeather = () => {\n  //   const apiKey = '5fc73283d7afc0b780eee68e8e3bb82b'\n  //   const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n  //     \"kiev\" +\n  //     \"&lang=ru&units=metric&appid=\" + apiKey;\n  //   fetch(URL).then(res => res.json()).then(json => {\n  //     setWeatherData(json);\n  //   });\n  //   setUpdateTime(new Date().toLocaleTimeString());\n  // }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"test \", weatherData.name, \" \", updateTime, \" \");\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WCard.js"],"names":["React","useState","useEffect","makeStyles","clsx","Card","CardContent","CardActions","Collapse","IconButton","Typography","ExpandMoreIcon","MoreHorizIcon","Menu","MenuItem","NavLink","useStyles","theme","root","width","marginBottom","borderRadius","padding","expand","transform","transition","transitions","create","duration","shortest","expandOpen","WCard","props","weatherData","setWeatherData","updateTime","setUpdateTime","anchorEl","setAnchorEl","expanded","setExpanded","fetchWeather","city","url","responce","fetch","data","json","Date","toLocaleTimeString","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,YAAY,EAAE,KAFV;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,OAAO,EAAE;AAJL,GAD+B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,cADL;AAENC,IAAAA,UAAU,EAAER,KAAK,CAACS,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,MAAAA,QAAQ,EAAEX,KAAK,CAACS,WAAN,CAAkBE,QAAlB,CAA2BC;AADW,KAAtC;AAFN,GAP6B;AAarCC,EAAAA,UAAU,EAAE;AACVN,IAAAA,SAAS,EAAE;AADD;AAbyB,CAAL,CAAN,CAA5B;AAkBA,eAAe,SAASO,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACkC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BtC,KAAK,CAACC,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BxC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeuC,YAAf,GAA8B;AAC5B,YAAMC,IAAI,GAAG,SAAb;AACA,YAAMC,GAAG,GAAG,uDACZD,IADY,GACL,8DADP;AAEA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAb,MAAAA,cAAc,CAACY,IAAD,CAAd;AACD;;AACDL,IAAAA,YAAY;AACZL,IAAAA,aAAa,CAAC,IAAIY,IAAJ,GAAWC,kBAAX,EAAD,CAAb;AACD,GAXQ,EAWN,EAXM,CAAT,CAPmC,CAsBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAWhB,WAAW,CAACiB,IAAvB,OAA8Bf,UAA9B,MAFF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nexport default function WCard(props) {\n  const [weatherData, setWeatherData] = useState(0);\n  const [updateTime, setUpdateTime] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n\n  useEffect(() => {\n    async function fetchWeather() {\n      const city = \"Харьков\";\n      const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n      const responce = await fetch(url);\n      const data = await responce.json();\n      setWeatherData(data);\n    }\n    fetchWeather();\n    setUpdateTime(new Date().toLocaleTimeString());\n  }, []);\n\n\n\n  // const fetchWeather = () => {\n  //   const apiKey = '5fc73283d7afc0b780eee68e8e3bb82b'\n  //   const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n  //     \"kiev\" +\n  //     \"&lang=ru&units=metric&appid=\" + apiKey;\n  //   fetch(URL).then(res => res.json()).then(json => {\n  //     setWeatherData(json);\n  //   });\n  //   setUpdateTime(new Date().toLocaleTimeString());\n  // }\n\n  return(\n\n    <div>test {weatherData.name} {updateTime} </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}