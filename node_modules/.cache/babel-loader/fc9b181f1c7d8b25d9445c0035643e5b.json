{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WeatherDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './index.css';\nimport Typography from '@material-ui/core/Typography';\nexport default function WeatherDetails(props) {\n  // const [city, setCity] = useState(sessionStorage.getItem(\"0\"));\n  const [city, setCity] = useState(props.location.city);\n  const [updateTime, setUpdateTime] = useState(null);\n  const [weatherData, setWeatherData] = useState({\n    \"coord\": {\n      \"lon\": 0,\n      \"lat\": 0\n    },\n    \"weather\": [{\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }],\n    \"base\": \"\",\n    \"main\": {\n      \"temp\": 0,\n      \"feels_like\": 0,\n      \"temp_min\": 0,\n      \"temp_max\": 0,\n      \"pressure\": 0,\n      \"humidity\": 0\n    },\n    \"visibility\": 0,\n    \"wind\": {\n      \"speed\": 0,\n      \"deg\": 0\n    },\n    \"clouds\": {\n      \"all\": 0\n    },\n    \"dt\": 0,\n    \"sys\": {\n      \"type\": 0,\n      \"id\": 0,\n      \"message\": 0,\n      \"country\": \"\",\n      \"sunrise\": 0,\n      \"sunset\": 0\n    },\n    \"timezone\": 0,\n    \"id\": 0,\n    \"name\": \"\",\n    \"cod\": 0\n  });\n  useEffect(() => {\n    if (props.location.city) {\n      // setCity(props.location.city);\n      // sessionStorage.setItem(\"0\", props.location.city);\n      fetchWeather();\n    }\n  }, []);\n\n  async function fetchWeather() {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n  }\n\n  const unixToDate = timestamp => {\n    var date = new Date(timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours > 10 ? hours + ':' + minutes.substr(-2) : \"0\" + hours + ':' + minutes.substr(-2);\n    return formattedTime;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    fullWidth: true,\n    onClick: () => {\n      checkAndAdd();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), React.createElement(Typography, {\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, weatherData.name), React.createElement(\"table\", {\n    style: {\n      width: \"500px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u043D\\u044B\\u0435 \\u0443\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, weatherData.weather[0].description.charAt(0).toUpperCase() + weatherData.weather[0].description.substring(1))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, weatherData.main.temp, \" \\xB0\\u0421\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, weatherData.main.feels_like, \" \\xB0\\u0421\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u041C\\u0438\\u043D. \\u0442\\u0435\\u043C\\u043F.\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, weatherData.main.temp_min, \" \\xB0\\u0421\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\u041C\\u0430\\u043A\\u0441. \\u0442\\u0435\\u043C\\u043F.\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, weatherData.main.temp_max, \" \\xB0\\u0421\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"\\u0414\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, weatherData.main.pressure, \" \\u0433\\u041F\\u0430\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u0412\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, weatherData.main.humidity, \"%\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, weatherData.wind.speed, \" \\u043C/\\u0441\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"\\u041D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0432\\u0435\\u0442\\u0440\\u0430\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, weatherData.wind.deg, \"\\xB0\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\u0412\\u0438\\u0434\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, weatherData.visibility, \" \\u043C\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"\\u0420\\u0430\\u0441\\u0441\\u0432\\u0435\\u0442\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, unixToDate(weatherData.sys.sunrise))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0442\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, unixToDate(weatherData.sys.sunset))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043E\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, updateTime)))));\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WeatherDetails.js"],"names":["React","useState","useEffect","Link","Typography","WeatherDetails","props","city","setCity","location","updateTime","setUpdateTime","weatherData","setWeatherData","fetchWeather","url","responce","fetch","data","json","Date","toLocaleTimeString","unixToDate","timestamp","date","hours","getHours","minutes","getMinutes","formattedTime","substr","checkAndAdd","name","width","weather","description","charAt","toUpperCase","substring","main","temp","feels_like","temp_min","temp_max","pressure","humidity","wind","speed","deg","visibility","sys","sunrise","sunset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './index.css';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function WeatherDetails(props) {\n  // const [city, setCity] = useState(sessionStorage.getItem(\"0\"));\n  const [city, setCity] = useState(props.location.city);\n  const [updateTime, setUpdateTime] = useState(null);\n  const [weatherData, setWeatherData] = useState({\n  \"coord\": {\n    \"lon\": 0,\n    \"lat\": 0\n  },\n  \"weather\": [\n    {\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }\n  ],\n  \"base\": \"\",\n  \"main\": {\n    \"temp\": 0,\n    \"feels_like\": 0,\n    \"temp_min\": 0,\n    \"temp_max\": 0,\n    \"pressure\": 0,\n    \"humidity\": 0\n  },\n  \"visibility\": 0,\n  \"wind\": {\n    \"speed\": 0,\n    \"deg\": 0\n  },\n  \"clouds\": {\n    \"all\": 0\n  },\n  \"dt\": 0,\n  \"sys\": {\n    \"type\": 0,\n    \"id\": 0,\n    \"message\": 0,\n    \"country\": \"\",\n    \"sunrise\": 0,\n    \"sunset\": 0\n  },\n  \"timezone\": 0,\n  \"id\": 0,\n  \"name\": \"\",\n  \"cod\": 0\n  });\n\n  useEffect(() => {\n    if(props.location.city) {\n      // setCity(props.location.city);\n      // sessionStorage.setItem(\"0\", props.location.city);\n      fetchWeather();\n    }\n  }, []);\n\n  async function fetchWeather() {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n    city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n  }\n\n  const unixToDate = (timestamp) => {\n    var date = new Date(timestamp * 1000);\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var formattedTime = hours > 10 ? hours + ':' + minutes.substr(-2) : \"0\" + hours + ':' + minutes.substr(-2);\n    return(formattedTime);\n  };\n\n  return (\n    <div>\n    <Link to=\"/\">\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      fullWidth\n      onClick={() => {\n        checkAndAdd();\n      }}\n    >Добавить\n    </Button>\n    </Link>\n    <Typography variant=\"h2\">{weatherData.name}</Typography>\n    <table style={{width: \"500px\"}}>\n\t  <tbody>\n    <tr>\n    <td>Погодные условия</td>\n    <td>{weatherData.weather[0].description.charAt(0).toUpperCase()\n      + weatherData.weather[0].description.substring(1)}</td>\n    </tr>\n\t\t<tr>\n\t\t<td>Температура</td>\n\t\t<td>{weatherData.main.temp} °С</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Ощущается как</td>\n\t\t<td>{weatherData.main.feels_like} °С</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Мин. темп.</td>\n\t\t<td>{weatherData.main.temp_min} °С</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Макс. темп.</td>\n\t\t<td>{weatherData.main.temp_max} °С</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Давление</td>\n\t\t<td>{weatherData.main.pressure} гПа</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Влажность</td>\n\t\t<td>{weatherData.main.humidity}%</td>\n\t\t</tr>\n    <tr>\n\t\t<td>Скорость ветра</td>\n\t\t<td>{weatherData.wind.speed} м/с</td>\n\t\t</tr>\n    <tr>\n    <td>Направление ветра</td>\n\t\t<td>{weatherData.wind.deg}°</td>\n\t\t</tr>\n    <tr>\n    <td>Видимость</td>\n\t\t<td>{weatherData.visibility} м</td>\n\t\t</tr>\n    <tr>\n    <td>Рассвет</td>\n\t\t<td>{unixToDate(weatherData.sys.sunrise)}</td>\n\t\t</tr>\n    <tr>\n    <td>Закат</td>\n\t\t<td>{unixToDate(weatherData.sys.sunset)}</td>\n\t\t</tr>\n    <tr>\n    <td>Обновлено</td>\n    <td>{updateTime}</td>\n    </tr>\n\t  </tbody>\n    </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}