{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WeatherDisplay.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nexport default class WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2';\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + name + \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({\n        weatherData: json\n      });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\u041F\\u043E\\u0434\\u043E\\u0436\\u0434\\u0438\\u0442\\u0435, \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E \\u043F\\u043E\\u0433\\u043E\\u0434\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u044E\\u0442\\u0441\\u044F\");\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, weatherData.name), React.createElement(\"img\", {\n      src: iconUrl,\n      alt: weatherData.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, weather.main), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, weatherData.main.temp, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"min: \", weatherData.main.temp_max, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"max: \", weatherData.main.temp_min, \" \\xB0\\u0421\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"wind: \", weatherData.wind.speed, \" \\u043C/\\u0441\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      startIcon: React.createElement(UpdateIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F: \", this.state.updateTime.toLocaleTimeString()), React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Word of the Day\"), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"), React.createElement(Typography, {\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"adjective\"), React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"well meaning and kindly.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), '\"a benevolent smile\"')), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Learn More\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WeatherDisplay.js"],"names":["React","Component","Button","UpdateIcon","Card","CardActions","CardContent","Typography","WeatherDisplay","constructor","state","weatherData","updateTime","getWeather","bind","componentDidMount","name","props","apiKey","URL","fetch","then","res","json","setState","Date","render","weather","iconUrl","icon","description","main","temp","temp_max","temp_min","wind","speed","toLocaleTimeString","classes","root","bull"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nexport default class WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null,\n      updateTime: null,\n    };\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  getWeather() {\n    const name = this.props.name;\n    const apiKey = '7d7de66dd8d5ba712b4daa70787e46e2'\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      name +\n      \"&lang=ru&units=metric&appid=\" + apiKey;\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n    this.state.updateTime = new Date();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData;\n\n    if (!weatherData)\n    return (<div>Подождите, данные о погоде загружаются</div>);\n\n    const weather = weatherData.weather[0];\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\n\n    return (\n      <div>\n        <h1>{weatherData.name}</h1>\n                <img src={iconUrl} alt={weatherData.description} />\n        <h1>{weather.main}</h1>\n        <h1>{weatherData.main.temp} °С</h1>\n        <h2>min: {weatherData.main.temp_max} °С</h2>\n        <h2>max: {weatherData.main.temp_min} °С</h2>\n        <h2>wind: {weatherData.wind.speed} м/с</h2>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          startIcon={<UpdateIcon />}\n          onClick={this.getWeather}\n          >Обновить\n        </Button>\n        <p>Время последнего обновления: {this.state.updateTime.toLocaleTimeString()}</p>\n\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          be{bull}nev{bull}o{bull}lent\n        </Typography>\n        <Typography color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}