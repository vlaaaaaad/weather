{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\nexport default function WCard(props) {\n  const [weatherData, setWeatherData] = useState({\n    \"coord\": {\n      \"lon\": 0,\n      \"lat\": 0\n    },\n    \"weather\": [{\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }],\n    \"base\": \"\",\n    \"main\": {\n      \"temp\": 0,\n      \"feels_like\": 0,\n      \"temp_min\": 0,\n      \"temp_max\": 0,\n      \"pressure\": 0,\n      \"humidity\": 0\n    },\n    \"visibility\": 0,\n    \"wind\": {\n      \"speed\": 0,\n      \"deg\": 0\n    },\n    \"clouds\": {\n      \"all\": 0\n    },\n    \"dt\": 0,\n    \"sys\": {\n      \"type\": 0,\n      \"id\": 0,\n      \"message\": 0,\n      \"country\": \"\",\n      \"sunrise\": 0,\n      \"sunset\": 0\n    },\n    \"timezone\": 0,\n    \"id\": 0,\n    \"name\": \"\",\n    \"cod\": 0\n  });\n  const [updateTime, setUpdateTime] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n\n  async function fetchWeather() {\n    const city = \"Харьков\";\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    console.log(data);\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n  } // const getWeather = () => {\n  //   const name = \"Харьков\";\n  //   const apiKey = '5fc73283d7afc0b780eee68e8e3bb82b'\n  //   const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n  //     name +\n  //     \"&lang=ru&units=metric&appid=\" + apiKey;\n  //   fetch(URL).then(res => res.json()).then(json => {\n  //     setWeatherData(json);\n  //   });\n  //   setUpdateTime(new Date().toLocaleTimeString());\n  // }\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDelete = () => {\n    alert();\n    setAnchorEl(null);\n  };\n\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return console.log({\n    weatherData\n  }), React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, weatherData.name), React.createElement(\"div\", {\n    className: \"crutch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, weatherData.main.temp, \" \\xB0\\u0421\")), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, weatherData.weather[0].description.toString()[0].toUpperCase() + weatherData.weather[0].description.substring(1)), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F: \", updateTime)), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"\\u041C\\u0438\\u043D. t: \", Math.round(weatherData.main.temp), \" \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"\\u041C\\u0430\\u043A\\u0441. t: Math.round(props.max) \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A: Math.round(props.feelsLike) \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: props.wind \\u043C/\\u0441\"))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    onClick: handleExpand,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(MoreHorizIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: () => {\n      setAnchorEl(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0443\\u044E \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E\"), React.createElement(MenuItem, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: \"#f44336\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))));\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WCard.js"],"names":["React","useState","useEffect","makeStyles","clsx","Card","CardContent","CardActions","Collapse","IconButton","Typography","ExpandMoreIcon","MoreHorizIcon","Menu","MenuItem","useStyles","theme","root","width","marginBottom","borderRadius","padding","expand","transform","transition","transitions","create","duration","shortest","expandOpen","WCard","props","weatherData","setWeatherData","updateTime","setUpdateTime","anchorEl","setAnchorEl","expanded","setExpanded","classes","fetchWeather","city","url","responce","fetch","data","json","console","log","Date","toLocaleTimeString","handleClick","event","currentTarget","handleClose","handleDelete","alert","handleExpand","name","main","temp","weather","description","toString","toUpperCase","substring","Math","round","Boolean","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nexport default function WCard(props) {\n  const [weatherData, setWeatherData] = useState({\n  \"coord\": {\n    \"lon\": 0,\n    \"lat\": 0\n  },\n  \"weather\": [\n    {\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }\n  ],\n  \"base\": \"\",\n  \"main\": {\n    \"temp\": 0,\n    \"feels_like\": 0,\n    \"temp_min\": 0,\n    \"temp_max\": 0,\n    \"pressure\": 0,\n    \"humidity\": 0\n  },\n  \"visibility\": 0,\n  \"wind\": {\n    \"speed\": 0,\n    \"deg\": 0\n  },\n  \"clouds\": {\n    \"all\": 0\n  },\n  \"dt\": 0,\n  \"sys\": {\n    \"type\": 0,\n    \"id\": 0,\n    \"message\": 0,\n    \"country\": \"\",\n    \"sunrise\": 0,\n    \"sunset\": 0\n  },\n  \"timezone\": 0,\n  \"id\": 0,\n  \"name\": \"\",\n  \"cod\": 0\n});\n  const [updateTime, setUpdateTime] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n\n  async function fetchWeather() {\n    const city = \"Харьков\";\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n    city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    console.log(data);\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n  }\n\n  // const getWeather = () => {\n  //   const name = \"Харьков\";\n  //   const apiKey = '5fc73283d7afc0b780eee68e8e3bb82b'\n  //   const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n  //     name +\n  //     \"&lang=ru&units=metric&appid=\" + apiKey;\n  //   fetch(URL).then(res => res.json()).then(json => {\n  //     setWeatherData(json);\n  //   });\n  //   setUpdateTime(new Date().toLocaleTimeString());\n  // }\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleDelete = () => {\n    alert();\n    setAnchorEl(null);\n  };\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return(\n    console.log({weatherData}),\n    <Card className={classes.root}>\n    <CardContent>\n      <Typography variant=\"h5\">\n        {weatherData.name}\n      </Typography>\n      <div className=\"crutch\">\n        <Typography variant=\"h2\">\n          {weatherData.main.temp} °С\n        </Typography>\n\n      </div>\n      <Typography>\n        {weatherData.weather[0].description.toString()[0].toUpperCase()\n          + weatherData.weather[0].description.substring(1)}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        Время последнего обновления: {updateTime}\n      </Typography>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent>\n      <Typography>\n        Мин. t: {Math.round(weatherData.main.temp)} °С\n      </Typography>\n      <Typography>\n        Макс. t: Math.round(props.max) °С\n      </Typography>\n      <Typography>\n        Ощущается как: Math.round(props.feelsLike) °С\n      </Typography>\n      <Typography>\n        Скорость ветра: props.wind м/с\n      </Typography>\n      </CardContent>\n    </Collapse>\n      <CardActions>\n      <IconButton\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: expanded,\n        })}\n        onClick={handleExpand}\n        aria-expanded={expanded}\n        aria-label=\"Развернуть\"\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n        <IconButton onClick={handleClick}>\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          >\n          <MenuItem onClick={() => {\n            setAnchorEl(null);\n          }}>Обновить</MenuItem>\n            <MenuItem onClick={handleClose}>\n            Показать подробную информацию\n            </MenuItem>\n          <MenuItem onClick={handleDelete}><span style={{  color: \"#f44336\"  }}>Удалить</span></MenuItem>\n        </Menu>\n      </CardActions>\n\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}