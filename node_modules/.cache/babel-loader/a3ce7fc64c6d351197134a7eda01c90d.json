{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/Desktop/weather/src/WCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DrawCard from './DrawCard';\nimport './index.css';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\nexport default function WCard({\n  city\n}) {\n  const [cityName, setCityName] = useState(city);\n  const [weatherData, setWeatherData] = useState({\n    \"coord\": {\n      \"lon\": 0,\n      \"lat\": 0\n    },\n    \"weather\": [{\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }],\n    \"base\": \"\",\n    \"main\": {\n      \"temp\": 0,\n      \"feels_like\": 0,\n      \"temp_min\": 0,\n      \"temp_max\": 0,\n      \"pressure\": 0,\n      \"humidity\": 0\n    },\n    \"visibility\": 0,\n    \"wind\": {\n      \"speed\": 0,\n      \"deg\": 0\n    },\n    \"clouds\": {\n      \"all\": 0\n    },\n    \"dt\": 0,\n    \"sys\": {\n      \"type\": 0,\n      \"id\": 0,\n      \"message\": 0,\n      \"country\": \"\",\n      \"sunrise\": 0,\n      \"sunset\": 0\n    },\n    \"timezone\": 0,\n    \"id\": 0,\n    \"name\": \"\",\n    \"cod\": 0\n  });\n  const [updateTime, setUpdateTime] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const [loadind, setLoading] = useState(true);\n  const classes = useStyles();\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n\n  async function fetchWeather() {\n    const city = cityName;\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n    setLoading(false);\n  }\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDelete = () => {\n    alert();\n    setAnchorEl(null);\n  };\n\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  if (loadind) return React.createElement(\"div\", {\n    style: {\n      height: 271,\n      width: 345,\n      backgroundColor: red\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n  return React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, weatherData.name), React.createElement(\"div\", {\n    className: \"crutch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, Math.round(weatherData.main.temp), \" \\xB0\\u0421\"), React.createElement(\"img\", {\n    className: \"image\" // src={\"http://openweathermap.org/img/w/\" +\n    //   weatherData.weather[0].icon + \".png\"}\n    // src={require(\"./\" + weatherData.weather[0].icon + \".png\")}\n    ,\n    src: process.env.PUBLIC_URL + '/' + weatherData.weather[0].icon + '.png',\n    alt: weatherData.weather.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, weatherData.weather[0].description.charAt(0).toUpperCase() + weatherData.weather[0].description.substring(1)), React.createElement(Typography, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F: \", updateTime)), React.createElement(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"\\u041C\\u0438\\u043D. t: \", Math.round(weatherData.main.temp_min), \" \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"\\u041C\\u0430\\u043A\\u0441. t: \", Math.round(weatherData.main.temp_max), \" \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"\\u041E\\u0449\\u0443\\u0449\\u0430\\u0435\\u0442\\u0441\\u044F \\u043A\\u0430\\u043A: \", Math.round(weatherData.main.feels_like), \" \\xB0\\u0421\"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", Math.round(weatherData.wind.speed), \" \\u043C/\\u0441\"))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    onClick: handleExpand,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(MoreHorizIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: () => {\n      setLoading(true);\n      fetchWeather();\n      setAnchorEl(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0443\\u044E \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E\"), React.createElement(MenuItem, {\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: \"#f44336\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))));\n}","map":{"version":3,"sources":["/Users/vlad/Desktop/weather/src/WCard.js"],"names":["React","useState","useEffect","makeStyles","clsx","Card","CardContent","CardActions","Collapse","IconButton","Typography","ExpandMoreIcon","MoreHorizIcon","Menu","MenuItem","DrawCard","useStyles","theme","root","width","marginBottom","borderRadius","padding","expand","transform","transition","transitions","create","duration","shortest","expandOpen","WCard","city","cityName","setCityName","weatherData","setWeatherData","updateTime","setUpdateTime","anchorEl","setAnchorEl","expanded","setExpanded","loadind","setLoading","classes","fetchWeather","url","responce","fetch","data","json","Date","toLocaleTimeString","handleClick","event","currentTarget","handleClose","handleDelete","alert","handleExpand","height","backgroundColor","red","name","Math","round","main","temp","process","env","PUBLIC_URL","weather","icon","description","charAt","toUpperCase","substring","temp_min","temp_max","feels_like","wind","speed","Boolean","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,YAAY,EAAE,KAFV;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,OAAO,EAAE;AAJL,GAD+B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,cADL;AAENC,IAAAA,UAAU,EAAER,KAAK,CAACS,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,MAAAA,QAAQ,EAAEX,KAAK,CAACS,WAAN,CAAkBE,QAAlB,CAA2BC;AADW,KAAtC;AAFN,GAP6B;AAarCC,EAAAA,UAAU,EAAE;AACVN,IAAAA,SAAS,EAAE;AADD;AAbyB,CAAL,CAAN,CAA5B;AAkBA,eAAe,SAASO,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC+B,IAAD,CAAxC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC;AAC/C,aAAS;AACP,aAAO,CADA;AAEP,aAAO;AAFA,KADsC;AAK/C,eAAW,CACT;AACE,YAAM,CADR;AAEE,cAAQ,EAFV;AAGE,qBAAe,EAHjB;AAIE,cAAQ;AAJV,KADS,CALoC;AAa/C,YAAQ,EAbuC;AAc/C,YAAQ;AACN,cAAQ,CADF;AAEN,oBAAc,CAFR;AAGN,kBAAY,CAHN;AAIN,kBAAY,CAJN;AAKN,kBAAY,CALN;AAMN,kBAAY;AANN,KAduC;AAsB/C,kBAAc,CAtBiC;AAuB/C,YAAQ;AACN,eAAS,CADH;AAEN,aAAO;AAFD,KAvBuC;AA2B/C,cAAU;AACR,aAAO;AADC,KA3BqC;AA8B/C,UAAM,CA9ByC;AA+B/C,WAAO;AACL,cAAQ,CADH;AAEL,YAAM,CAFD;AAGL,iBAAW,CAHN;AAIL,iBAAW,EAJN;AAKL,iBAAW,CALN;AAML,gBAAU;AANL,KA/BwC;AAuC/C,gBAAY,CAvCmC;AAwC/C,UAAM,CAxCyC;AAyC/C,YAAQ,EAzCuC;AA0C/C,WAAO;AA1CwC,GAAD,CAA9C;AA4CA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACwC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC0C,OAAD,EAAUC,UAAV,IAAwB3C,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM4C,OAAO,GAAG7B,SAAS,EAAzB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd4C,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,YAAf,GAA8B;AAC5B,UAAMd,IAAI,GAAGC,QAAb;AACA,UAAMc,GAAG,GAAG,uDACZf,IADY,GACL,8DADP;AAEA,UAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAf,IAAAA,cAAc,CAACc,IAAD,CAAd;AACAZ,IAAAA,aAAa,CAAC,IAAIc,IAAJ,GAAWC,kBAAX,EAAD,CAAb;AACAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,QAAMU,WAAW,GAAGC,KAAK,IAAI;AAC3Bf,IAAAA,WAAW,CAACe,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxBjB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,QAAMkB,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK;AACLnB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAIA,QAAMoB,YAAY,GAAG,MAAM;AACzBlB,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,MAAIE,OAAJ,EACE,OAAO;AAAK,IAAA,KAAK,EAAE;AAACkB,MAAAA,MAAM,EAAE,GAAT;AAAc1C,MAAAA,KAAK,EAAE,GAArB;AAA0B2C,MAAAA,eAAe,EAAEC;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6D;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7D,CAAP;AAEF,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAElB,OAAO,CAAC3B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,WAAW,CAAC6B,IADf,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBC,IAA5B,CADH,gBADF,EAIE;AACE,IAAA,SAAS,EAAC,OADZ,CAEE;AACA;AACA;AAJF;AAKE,IAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,GAAzB,GAA8BpC,WAAW,CAACqC,OAAZ,CAAoB,CAApB,EAAuBC,IAArD,GAA4D,MALnE;AAME,IAAA,GAAG,EAAEtC,WAAW,CAACqC,OAAZ,CAAoBL,IAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,EAiBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,WAAW,CAACqC,OAAZ,CAAoB,CAApB,EAAuBE,WAAvB,CAAmCC,MAAnC,CAA0C,CAA1C,EAA6CC,WAA7C,KACGzC,WAAW,CAACqC,OAAZ,CAAoB,CAApB,EAAuBE,WAAvB,CAAmCG,SAAnC,CAA6C,CAA7C,CAFN,CAjBF,EAqBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mKACgCxC,UADhC,CArBF,CADA,EA0BA,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEI,QAAd;AAAwB,IAAA,OAAO,EAAC,MAAhC;AAAuC,IAAA,aAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACWwB,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBW,QAA5B,CADX,gBADA,EAIA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACYb,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBY,QAA5B,CADZ,gBAJA,EAOA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFACkBd,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAACgC,IAAZ,CAAiBa,UAA5B,CADlB,gBAPA,EAUA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FACmBf,IAAI,CAACC,KAAL,CAAW/B,WAAW,CAAC8C,IAAZ,CAAiBC,KAA5B,CADnB,mBAVA,CADF,CA1BA,EA0CE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AACE,IAAA,SAAS,EAAE9E,IAAI,CAACyC,OAAO,CAACtB,MAAT,EAAiB;AAC9B,OAACsB,OAAO,CAACf,UAAT,GAAsBW;AADQ,KAAjB,CADjB;AAIE,IAAA,OAAO,EAAEmB,YAJX;AAKE,qBAAenB,QALjB;AAME,kBAAW,8DANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADA,EAWE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEa,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAcE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEf,QAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAE4C,OAAO,CAAC5C,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEkB,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAM;AACvBb,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,YAAY;AACZN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPF,EAYI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEiB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4KAZJ,EAeE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC;AAAM,IAAA,KAAK,EAAE;AAAG0B,MAAAA,KAAK,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAjC,CAfF,CAdF,CA1CF,CADF;AA8ED","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DrawCard from './DrawCard'\nimport './index.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 345,\n    marginBottom: \"14%\",\n    borderRadius: 25,\n    padding: 10\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nexport default function WCard({city}) {\n  const [cityName, setCityName] = useState(city);\n  const [weatherData, setWeatherData] = useState({\n  \"coord\": {\n    \"lon\": 0,\n    \"lat\": 0\n  },\n  \"weather\": [\n    {\n      \"id\": 0,\n      \"main\": \"\",\n      \"description\": \"\",\n      \"icon\": \"\"\n    }\n  ],\n  \"base\": \"\",\n  \"main\": {\n    \"temp\": 0,\n    \"feels_like\": 0,\n    \"temp_min\": 0,\n    \"temp_max\": 0,\n    \"pressure\": 0,\n    \"humidity\": 0\n  },\n  \"visibility\": 0,\n  \"wind\": {\n    \"speed\": 0,\n    \"deg\": 0\n  },\n  \"clouds\": {\n    \"all\": 0\n  },\n  \"dt\": 0,\n  \"sys\": {\n    \"type\": 0,\n    \"id\": 0,\n    \"message\": 0,\n    \"country\": \"\",\n    \"sunrise\": 0,\n    \"sunset\": 0\n  },\n  \"timezone\": 0,\n  \"id\": 0,\n  \"name\": \"\",\n  \"cod\": 0\n});\n  const [updateTime, setUpdateTime] = useState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const [loadind, setLoading] = useState(true);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchWeather();\n  }, []);\n\n  async function fetchWeather() {\n    const city = cityName;\n    const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n    city + \"&lang=ru&units=metric&appid=5fc73283d7afc0b780eee68e8e3bb82b\";\n    const responce = await fetch(url);\n    const data = await responce.json();\n    setWeatherData(data);\n    setUpdateTime(new Date().toLocaleTimeString());\n    setLoading(false);\n  }\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleDelete = () => {\n    alert();\n    setAnchorEl(null);\n  };\n  const handleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  if (loadind)\n    return <div style={{height: 271, width: 345, backgroundColor: red}}><div class=\"loader\"></div></div>;\n\n  return(\n    <Card className={classes.root}>\n    <CardContent>\n      <Typography variant=\"h5\">\n        {weatherData.name}\n      </Typography>\n      <div className=\"crutch\">\n        <Typography variant=\"h2\">\n          {Math.round(weatherData.main.temp)} °С\n        </Typography>\n        <img\n          className=\"image\"\n          // src={\"http://openweathermap.org/img/w/\" +\n          //   weatherData.weather[0].icon + \".png\"}\n          // src={require(\"./\" + weatherData.weather[0].icon + \".png\")}\n          src={process.env.PUBLIC_URL + '/'+ weatherData.weather[0].icon + '.png'}\n          alt={weatherData.weather.main}\n        />\n      </div>\n      <Typography>\n        {weatherData.weather[0].description.charAt(0).toUpperCase()\n          + weatherData.weather[0].description.substring(1)}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        Время последнего обновления: {updateTime}\n      </Typography>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent>\n      <Typography>\n        Мин. t: {Math.round(weatherData.main.temp_min)} °С\n      </Typography>\n      <Typography>\n        Макс. t: {Math.round(weatherData.main.temp_max)} °С\n      </Typography>\n      <Typography>\n        Ощущается как: {Math.round(weatherData.main.feels_like)} °С\n      </Typography>\n      <Typography>\n        Скорость ветра: {Math.round(weatherData.wind.speed)} м/с\n      </Typography>\n      </CardContent>\n    </Collapse>\n      <CardActions>\n      <IconButton\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: expanded,\n        })}\n        onClick={handleExpand}\n        aria-expanded={expanded}\n        aria-label=\"Развернуть\"\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n        <IconButton onClick={handleClick}>\n          <MoreHorizIcon />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          >\n          <MenuItem onClick={() => {\n            setLoading(true);\n            fetchWeather();\n            setAnchorEl(null);\n          }}>Обновить</MenuItem>\n            <MenuItem onClick={handleClose}>\n            Показать подробную информацию\n            </MenuItem>\n          <MenuItem onClick={handleDelete}><span style={{  color: \"#f44336\"  }}>Удалить</span></MenuItem>\n        </Menu>\n      </CardActions>\n\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}